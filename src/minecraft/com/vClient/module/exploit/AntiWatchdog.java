package com.vClient.module.exploit;

import com.vClient.event.EventTarget;
import com.vClient.event.events.EventChat;
import com.vClient.event.events.EventUpdate;
import com.vClient.module.Category;
import com.vClient.module.Module;
import com.vClient.module.combat.KillAura;
import com.vClient.util.ClockUtil;
import com.vClient.util.TargetUtil;
import com.vClient.vClient;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLivingBase;
import org.lwjgl.input.Keyboard;

import java.util.List;
import java.util.concurrent.LinkedBlockingQueue;

public class AntiWatchdog extends Module {
    private LinkedBlockingQueue<String> playerNames;
    private ClockUtil clock = new ClockUtil();
    private int reports;
    public AntiWatchdog() {
        super("AntiWatchdog", Keyboard.CHAR_NONE, Category.EXPLOIT, "Report all players in current lobby.");
    }
    @Override
    public void onEnable() {
        List<Entity> entities = mc.theWorld.getLoadedEntityList();
        playerNames = new LinkedBlockingQueue<>();
        for (Entity e : entities) {
            if (TargetUtil.isPlayer(e) && e != mc.thePlayer && !e.isInvisible() && e.isEntityAlive())
                playerNames.add(e.getName());
        }
        reports = 0;
        super.onEnable();
    }
    @EventTarget
    public void onUpdate(EventUpdate event) {
        clock.updateTime();
        if (playerNames.isEmpty()) {
            vClient.addChatMessage("Reported " + reports + " players.");
            vClient.addChatMessage("Disabled " + "\2473" + "AntiWatchdog");
            this.toggle();
            return;
        }
        if (clock.elapsedTime() > 1005) {
            String name;
            try {
                name = playerNames.take();
                mc.thePlayer.sendChatMessage("/wdr " + name + " bhop ka");
            } catch (final Exception e) {
                e.printStackTrace();
            }
            reports++;
            clock.resetTime();
        }
    }
    @EventTarget
    public void onChat(EventChat event) {
        if (event.getIncomingChat().equals("Thanks for your Cheating (Hacking) report. We understand your concerns and it will be reviewed as soon as possible."))
            event.setCancelled(true);
    }
}
